#!/usr/bin/env python

from keystoneclient.auth.identity import v3
from keystoneclient import session
from novaclient import client as nova_client

import os

example_credentials="auth_url=''\nusername=''\npassword=''\nproject_id=''\nuser_domain_id=''"

# import user details from credentials.py - if none exist, raise exit & print help

try:
    if os.path.isfile('./credentials.py'):
        from credentials import auth_url, username, password, project_id, user_domain_id
    else:
        print "credentials.py file missing, please create one. ie:\n{cred}".format(cred=example_credentials)
        raise SystemExit
except ImportError:
    print "unable to read all variables, ensure file is correct, i.e.:"
    print example_credentials
    raise SystemExit

# session

auth = v3.Password(auth_url=auth_url, username=username, password=password, project_id=project_id, user_domain_id=user_domain_id)
sess = session.Session(auth=auth, verify='/etc/ssl/certs/ca-certificates.crt')

# nova connection

nova = nova_client.Client(2, session=sess)

# list function:
def prompt_user(lst):
    lst_len = len(lst)
    while  True:
        for i in range(lst_len):
            print i, lst[i]
        print "-1 to exit..."
        try:
            choice = int(input('Your choice? '))
        except:
            print "invalid choice"
            continue
        if choice not in range(-1, lst_len):
            print "Need an integer between -1 and %s" %(lst_len-1)
        else:
            return choice

# gather vm details

# function to get the VM name

def get_name():
    selection_ok = ''
    while selection_ok is not 'y' and selection_ok is not 'Y':
        get_name.name = raw_input('What should we call this VM? ')
        print "name is {name}".format(name=get_name.name)
        selection_ok = raw_input('is that OK? answer y/Y to continue ')

# function to check the SSH key to use

def get_key():
    keypair_list = nova.keypairs.list()
    if len(keypair_list) is 0:
        print "You do not have any keypairs associated with this account, proceeding..."
    elif len(keypair_list) is 1:
        print "You only have one keypair, proceeding..."
        get_key.name = keypair_list[0].name
    else:
        print "Here are your available SSH keys:"
        index = int(prompt_user(keypair_list))
        get_key.name = keypair_list[index].name

# function to select the VM image

def get_image():
    print "Here are your available images:"
    image_list = nova.images.list()
    index = int(prompt_user(image_list))
    get_image.id = image_list[index].id

# function to select the flavor

def get_flavor():
    print "Here are your available flavors:"
    flavor_list = nova.flavors.list()
    index = int(prompt_user(flavor_list))
    get_flavor.id = flavor_list[index].id

# call all our functions

get_name()
get_key()
get_image()
get_flavor()

# if they do not have an SSH key let's just carry on without it...

try:
    if 'get_key.name' in globals():
        nova.servers.create(name=get_name.name, image=get_image.id, flavor=get_flavor.id, key_name=get_key.name)
    else:
        nova.servers.create(name=get_name.name, image=get_image.id, flavor=get_flavor.id)
except nova_client.exceptions.Forbidden:
    print "Nova denied your request, please check you have sufficient quota and your details are correct..."
