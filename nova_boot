#!/usr/bin/env python

from keystoneclient.auth.identity import v3
from keystoneclient import session
from novaclient import client as nova_client

import os

example_credentials="auth_url=''\nusername=''\npassword=''\nproject_id=''\nuser_domain_id=''"

# import user details from credentials.py - if none exist, raise exit & print help

try:
    if os.path.isfile('./credentials.py'):
        from credentials import auth_url, username, password, project_id, user_domain_id
    else:
        print "credentials.py file missing, please create one. ie:\n{cred}".format(cred=example_credentials)
        raise SystemExit
except ImportError:
    print "unable to read all variables, ensure file is correct, i.e.:"
    print example_credentials
    raise SystemExit

# session

auth = v3.Password(auth_url=auth_url, username=username, password=password, project_id=project_id, user_domain_id=user_domain_id)
sess = session.Session(auth=auth, verify='/etc/ssl/certs/ca-certificates.crt')

# nova connection

nova = nova_client.Client(2, session=sess)

# helper function:
def prompt_user(lst):
    """
        Given a list LST of n items, will print the items and prompt for input until the user has made a selection.
        Returns a number between -1 (user does not want to proceed, and len(lst).
    """
    lst_len = len(lst)
    while  True:
        for i in range(lst_len):
            print i, lst[i]
        print "-1, exit"
        try:
            choice = int(input('Your choice? '))
        except:
            print "invalid choice"
            continue
        if choice not in range(-1, lst_len):
            print "Need an integer between -1 and %s" %(lst_len-1)
        else:
            return choice

# gather vm details

# function to check the SSH key to use

def get_key():
    selection_ok = ''
    while selection_ok is not 'y' and selection_ok is not 'Y':
        print "Here are your available SSH keys:"
        keypair_list = nova.keypairs.list()
        for key in keypair_list:
            print key.name
        get_key.name = raw_input('Which key should we use? ')
        print "Using key name {name}.".format(name=get_key.name)
        selection_ok = raw_input('is that OK? answer y/Y to continue ')

# function to get the VM name

def get_name():
    selection_ok = ''
    while selection_ok is not 'y' and selection_ok is not 'Y':
        get_name.name = raw_input('What should we call this VM? ')
        print "name is {name}".format(name=get_name.name)
        selection_ok = raw_input('is that OK? answer y/Y to continue ')

# function to select the VM image

def get_image():
    selection_ok = ''
    while selection_ok is not 'y' and selection_ok is not 'Y':
       image_list = nova.images.list()
       print "Copy the id from one of the images below...\n"
       print '{:<40} {:<12}'.format("Name", "ID")
       for image in image_list:
           print '{:<40} {:<12}'.format(image.name, image.id)
       get_image.id = raw_input('Please copy and paste the ID: ') 
       for image in image_list:
           if image.id == get_image.id:
               print "We will use {id}".format(id=image.name)
               selection_ok = raw_input('is that OK? answer y/Y to continue ')

# function to select the flavor

def get_flavor():
    selection_ok = ''
    while selection_ok is not 'y' and selection_ok is not 'Y':
        flavor_list = nova.flavors.list()
        print '{:<4} {:<10} {:<8} {:<8} {:<8}'.format("ID", "Name", "VCPUs", "RAM", "DISK")
        for flavor in flavor_list:
            print '{:<4} {:<10} {:<8} {:<8} {:<8}'.format(flavor.id, flavor.name, flavor.vcpus, flavor.ram, flavor.disk)
        get_flavor.id = raw_input('Please specify the ID: ')
        print "Using {id}".format(id=get_flavor.id)
        selection_ok = raw_input('is that OK? answer y/Y to continue ')

get_key()
get_name()
get_image()
get_flavor()

try:
    nova.servers.create(name=get_name.name, image=get_image.id, flavor=get_flavor.id, key_name=get_key.name)
except nova_client.exceptions.Forbidden:
    print "Nova denied your request, please check you have sufficient quota and your details are correct..."
